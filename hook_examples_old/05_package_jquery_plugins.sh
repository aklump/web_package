#!/usr/bin/env bash

#
# Create a jQuery plugins module for use with Webpack
#

# Path to the output file.
path_to_output="$7/js/jQueryWithPlugins.js"

# A common directory for all plugins.
path_to_plugins="$7/js"

# An array of relative paths to the individiual plugins to concat.
plugins=("jquery.ba-bbq.min.js" "jquery.fullscreen.min.js" "jquery.once.min.js" "jquery.touchSwipe.min.js")
# End config.

output_basename=$(basename $path_to_output)
if [[ -f "$path_to_output" ]]; then
    rm "$path_to_output" || build_fail_exception "Could not create $output_basename"
fi

echo "// This module is autogenerated by $(basename ${BASH_SOURCE[0]}); DO NOT EDIT!" >> $path_to_output
echo "// It exports a jQuery object with additional plugins added in." >> $path_to_output
echo "\n// Usage: let jQuery = require('${output_basename%.*}');"  >> $path_to_output
echo "\nvar jQuery = require('jquery');"  >> $path_to_output
echo "jQuery.browser = jQuery.browser || {};"  >> $path_to_output
echo "(function (jQuery, window) {\n"  >> $path_to_output
for plugin in "${plugins[@]}"; do
    path_to_plugin="$path_to_plugins/$plugin"
    [[ -f "$path_to_plugin" ]] || build_fail_exception "Plugin $plugin not found"
    cat "$path_to_plugin" >> $path_to_output
    echo "" >> $path_to_output
done
echo "\n}(jQuery, this));" >> $path_to_output
echo "module.exports = jQuery;" >> $path_to_output
